@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix ex: <http://example.com/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> . 
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix schema: <http://schema.org/> .
@prefix mls: <http://www.w3.org/ns/mls#> .
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix sio: <http://semanticscience.org/resource/> .
@prefix nobias: <https://nobias-project.eu/> .
@base <https://nobias-project.eu/> .

<SharingBehaviorMapping>
  a rr:TriplesMap;
    
  rml:logicalSource [
    rml:source "xxx/mappings/input/NewsUserMapping.csv";
    rml:referenceFormulation ql:CSV
  ];
  rr:subjectMap [
    rr:template "https://nobias-project.eu/SharingBehavior/{userID}-{news}";
    rr:class nobias:SharingBehavior
  ];  
  rr:predicateObjectMap [
	  rr:predicate nobias:timesShared;
	  rr:objectMap [ 
		  rml:reference "timesShared";
		  rr:datatype xsd:int
	  ]
  ];  

  rr:predicateObjectMap [
      rr:predicate nobias:hasNews;
      rr:objectMap [
        rr:parentTriplesMap <NewsMapping> ;
        rr:joinCondition [
          rr:child "news";
          rr:parent "id"
      ]
    ]
  ];
  
  rr:predicateObjectMap [
      rr:predicate nobias:hasUser;
      rr:objectMap [
        rr:parentTriplesMap <UsersMapping> ;
        rr:joinCondition [
          rr:child "userID";
          rr:parent "id"
      ]
    ]
  ].
  
<UsersMapping>
  a rr:TriplesMap;
    
  rml:logicalSource [
    rml:source "xxx/mappings/input/users.csv";
    rml:referenceFormulation ql:CSV
  ];
  
  rr:subjectMap [
    rr:template "https://nobias-project.eu/SocialMediaUser/{id}";
    rr:class nobias:SocialMediaUser
  ]; 

  rr:predicateObjectMap [
	  rr:predicate nobias:userName;
	  rr:objectMap [ 
		  rml:reference "userID" 
	  ]
  ];

  rr:predicateObjectMap [
	  rr:predicate nobias:hasSocialMediaUrl;
	  rr:objectMap [ 
		  rml:reference "socialNetwork" 
	  ]
  ];
  
  rr:predicateObjectMap [
	  rr:predicate nobias:associatedTo;
	  rr:objectMap [
		  rr:template "https://nobias-project.eu/Dataset/{dataset}";
	  ]
  ].
    
<NewsMapping>
  a rr:TriplesMap;
    
  rml:logicalSource [
    rml:source "xxx/mappings/input/news.csv";
    rml:referenceFormulation ql:CSV
  ];
  rr:subjectMap [
    rr:template "https://nobias-project.eu/News/{id}";
    rr:class nobias:News
  ]; 
  
  rr:predicateObjectMap [
	  rr:predicate nobias:hasNewsName;
	  rr:objectMap [ 
		  rml:reference "originalID" 
	  ]
  ];

  rr:predicateObjectMap [
	  rr:predicate nobias:hasSource;
	  rr:objectMap [ 
		  rml:reference "source" 
	  ]
  ]; 

  rr:predicateObjectMap [
	  rr:predicate nobias:associatedTo;
	  rr:objectMap [
		  rr:template "https://nobias-project.eu/Dataset/{Dataset}";
	  ]
  ];
  
  rr:predicateObjectMap [
	  rr:predicate nobias:hasGroundTruth;
	  rr:objectMap [ 
		  rml:reference "groundTruth" 
	  ]
  ];   
  
  rr:predicateObjectMap [
	  rr:predicate nobias:hasNewsUrl;
	  rr:objectMap [ 
		  rml:reference "url" 
	  ]
  ];  

  rr:predicateObjectMap [
      rr:predicate nobias:publishedBy;
      rr:objectMap [
        rr:parentTriplesMap <SourcesMapping> ;
        rr:joinCondition [
          rr:child "publisherID";
          rr:parent "publishers"
      ]
    ]
  ].
  
<SourcesMapping>
  a rr:TriplesMap;
    
  rml:logicalSource [
    rml:source "xxx/mappings/input/publishers.csv";
    rml:referenceFormulation ql:CSV
  ];
  rr:subjectMap [
    rr:template "https://nobias-project.eu/Publisher/{id}";
    rr:class nobias:Publisher
  ]; 

  rr:predicateObjectMap [
	  rr:predicate nobias:sourceName;
	  rr:objectMap [ 
		  rml:reference "url" 
	  ]
  ].
  
<NewsPublisherMapping>
  a rr:TriplesMap;
    
  rml:logicalSource [
    rml:source "xxx/mappings/input/NewsPublisherMapping.csv";
    rml:referenceFormulation ql:CSV
  ];
  
  rr:subjectMap [
    rr:template "https://nobias-project.eu/Publisher/{publisherID}";
    rr:class nobias:Publisher
  ]; 

  
  rr:predicateObjectMap [
      rr:predicate nobias:publishes;
      rr:objectMap [
        rr:parentTriplesMap <NewsMapping> ;
        rr:joinCondition [
          rr:child "newsID";
          rr:parent "id"
      ]
    ]
  ];
  
  rr:predicateObjectMap [
	  rr:predicate nobias:associatedTo;
	  rr:objectMap [
		  rr:template "https://nobias-project.eu/Dataset/{dataset}";
	  ]
  ].  
  

<FactCheckMapping>
  a rr:TriplesMap;
    
  rml:logicalSource [
    rml:source "xxx/mappings/input/factcheck.csv";
    rml:referenceFormulation ql:CSV
  ];
  rr:subjectMap [
    rr:template "https://nobias-project.eu/FactCheckResource/{id}";
    rr:class nobias:FactCheckResource
  ]; 

  rr:predicateObjectMap [
	  rr:predicate nobias:resourceName;
	  rr:objectMap [ 
		  rml:reference "name" 
	  ]
  ];
  
  rr:predicateObjectMap [
	  rr:predicate nobias:hasFactCheckerUrl;
	  rr:objectMap [ 
		  rml:reference "website" 
	  ]
  ].