@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema: <http://schema.org/> .
@prefix dbo: <http://dbpedia.org/ontology/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix nobias: <https://nobias-project.eu/> .
@base <https://nobias-project.eu/> .

<Term>
  a rr:TriplesMap;

  rml:logicalSource [
	rml:source "/Users/russo/git/SDM-RDFizer/mappings/input/terms.csv";
    rml:referenceFormulation ql:CSV
  ];

  rr:subjectMap [
  rr:template "https://nobias-project.eu/MaxTerm/{id}";
  rr:class nobias:MaxTerm
  ];

  rr:predicateObjectMap [
	  rr:predicate nobias:isDerivedFrom;
	  rr:objectMap [
          rr:template "https://nobias-project.eu/GroundRule/{derived_from}";
	]
  ];

  rr:predicateObjectMap [
	  rr:predicate nobias:hasFold;
	  rr:objectMap [
          rr:template "https://nobias-project.eu/CVFold/{fold_id}";
	]
  ];

  rr:predicateObjectMap [
	  rr:predicate nobias:constant;
	  rr:objectMap [
		  rml:reference "constant"
	  ]
  ];
  
  rr:predicateObjectMap [
	  rr:predicate nobias:incompatibility;
	  rr:objectMap [
		  rml:reference "incompatibility"
	  ]
  ].
  
  
<RandomVariableAtoms>
  a rr:TriplesMap;

  rml:logicalSource [
	rml:source "/Users/russo/git/SDM-RDFizer/mappings/input/random_variable_atoms.csv";
    rml:referenceFormulation ql:CSV
  ];

  rr:subjectMap [
  rr:template "https://nobias-project.eu/RandomVariableAtom/{id}";
  rr:class nobias:RandomVariableAtom
  ];
  
  rr:predicateObjectMap [
	  rr:predicate nobias:rva_name;
	  rr:objectMap [
		  rml:reference "name"
	  ]
  ];  
      
  rr:predicateObjectMap [
	  rr:predicate nobias:value;
	  rr:objectMap [
		  rml:reference "value"
	  ]
  ];
  
  rr:predicateObjectMap [
	  rr:predicate nobias:hasFold;
	  rr:objectMap [
          rr:template "https://nobias-project.eu/CVFold/{fold_id}";
	]
  ];
  
  rr:predicateObjectMap [
	 rr:predicate nobias:instantiatesFrom;
	 rr:objectMap [
		  rr:template "https://nobias-project.eu/Atom/{subClassOf}";
	]
  ].


<TermRVA>
  a rr:TriplesMap;

  rml:logicalSource [
	rml:source "/Users/russo/git/SDM-RDFizer/mappings/input/has_rvas.csv";
    rml:referenceFormulation ql:CSV
  ];

  rr:subjectMap [
  rr:template "https://nobias-project.eu/TermRandomVariableAtom/{term_id}_{has_rva}";
  rr:class nobias:TermRandomVariableAtom
  ];
  
  rr:predicateObjectMap [
	  rr:predicate nobias:hasTerm;
	  rr:objectMap [
		  rr:template "https://nobias-project.eu/MaxTerm/{term_id}";
	  ]
  ];
  
  rr:predicateObjectMap [
	  rr:predicate nobias:hasAtom;
	  rr:objectMap [
		  rr:template "https://nobias-project.eu/RandomVariableAtom/{has_rva}";
	  ]
  ];  
  
  rr:predicateObjectMap [
	  rr:predicate nobias:coefficient;
	  rr:objectMap [
		  rml:reference "coefficient"
	  ]
  ]. 


<ObservedAtoms>
  a rr:TriplesMap;

  rml:logicalSource [
	rml:source "/Users/russo/git/SDM-RDFizer/mappings/input/observed_atoms.csv";
    rml:referenceFormulation ql:CSV
  ];

  rr:subjectMap [
  rr:template "https://nobias-project.eu/ObservedAtom/{id}";
  rr:class nobias:ObservedAtom
  ];

  rr:predicateObjectMap [
	  rr:predicate nobias:obsatom_name;
	  rr:objectMap [
		  rml:reference "name"
	  ]
  ];

  rr:predicateObjectMap [
	 rr:predicate nobias:instantiatesFrom;
	 rr:objectMap [
		  rr:template "https://nobias-project.eu/Atom/{subClassOf}";
	]
  ];   
  
  rr:predicateObjectMap [
	  rr:predicate nobias:hasFold;
	  rr:objectMap [
          rr:template "https://nobias-project.eu/CVFold/{fold_id}";
	]
  ];
  
  rr:predicateObjectMap [
	  rr:predicate nobias:value;
	  rr:objectMap [
		  rml:reference "value"
	  ]
  ].
  
