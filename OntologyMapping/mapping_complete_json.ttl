@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema: <http://schema.org/> .
@prefix dbo: <http://dbpedia.org/ontology/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix nobias: <http://nobias-project.eu/vocab/> .
@base <http://nobias-project.eu/> .

<RuleMapping>
  a rr:TriplesMap;

  rml:logicalSource [
	rml:source "/git/SDM-RDFizer/mappings/input/json_data.json";
	rml:referenceFormulation ql:JSONPath;
	rml:iterator "$.rules[*]"
  ];

  rr:subjectMap [
  rr:template "https://nobias-project.eu/Rule/{id}";
  rr:class nobias:Rule
  ];

  rr:predicateObjectMap [
	  rr:predicate nobias:implication;
	  rr:objectMap [
		  rml:reference "implication"
	  ]
  ];

  rr:predicateObjectMap [
	  rr:predicate nobias:weight;
	  rr:objectMap [
		  rml:reference "weight"
	  ]
  ].


<GroundRule>
  a rr:TriplesMap;

  rml:logicalSource [
	rml:source "/git/SDM-RDFizer/mappings/input/json_data.json";
	rml:referenceFormulation ql:JSONPath;
	rml:iterator "$.groundrules[*]"
  ];

  rr:subjectMap [
  rr:template "https://nobias-project.eu/GroundRule/{id}";
  rr:class nobias:GroundRule
  ];

  rr:predicateObjectMap [
	  rr:predicate nobias:dnfForm;
	  rr:objectMap [
		  rml:reference "dnfForm"
	  ]
  ];

  rr:predicateObjectMap [
	  rr:predicate rdfs:subClassOf;
	  rr:objectMap [
		rr:parentTriplesMap <Rule>;
		rr:joinCondition [
		  rr:child "grounded_from";
		  rr:parent "id"
	  ]
	]
  ];
  
  rr:predicateObjectMap [
	  rr:predicate nobias:derives;
	  rr:objectMap [
		rr:parentTriplesMap <Term> ;
		rr:joinCondition [
		  rr:child "derives";
		  rr:parent "id"
	  ]
	]
  ].


<Term>
  a rr:TriplesMap;

  rml:logicalSource [
	rml:source "/git/SDM-RDFizer/mappings/input/json_data.json";
	rml:referenceFormulation ql:JSONPath;
	rml:iterator "$.terms[*]"
  ];

  rr:subjectMap [
  rr:template "https://nobias-project.eu/Term/{id}";
  rr:class nobias:Term
  ];

  rr:predicateObjectMap [
	  rr:predicate nobias:maxTerm;
	  rr:objectMap [
		  rml:reference "maxTerm"
	  ]
  ];

  rr:predicateObjectMap [
	  rr:predicate nobias:isDerivedFrom;
	  rr:objectMap [
		rr:parentTriplesMap <GroundRule> ;
		rr:joinCondition [
		  rr:child "derived_from";
		  rr:parent "id"
	  ]
	]
  ];
  
  rr:predicateObjectMap [
	  rr:predicate nobias:incompatibility;
	  rr:objectMap [
		  rml:reference "incompatibility"
	  ]
  ].

<ObservedAtoms>
  a rr:TriplesMap;

  rml:logicalSource [
	rml:source "/git/SDM-RDFizer/mappings/input/json_data.json";
	rml:referenceFormulation ql:JSONPath;
	rml:iterator "$.observed_atoms[*]"
  ];

  rr:subjectMap [
  rr:template "https://nobias-project.eu/ObservedAtom/{name}";
  rr:class nobias:ObservedAtom
  ];

  rr:predicateObjectMap [
	  rr:predicate rdfs:subClassOf;
	  rr:objectMap [
		  rr:constant "GroundAtom"
	]
  ];
  
  rr:predicateObjectMap [
	  rr:predicate nobias:hasArgument;
	  rr:objectMap [
		  rml:reference "has_args"
	  ]
  ];

  rr:predicateObjectMap [
	  rr:predicate nobias:value;
	  rr:objectMap [
		  rml:reference "value"
	  ]
  ].


<RandomVariableAtoms>
  a rr:TriplesMap;

  rml:logicalSource [
	rml:source "/git/SDM-RDFizer/mappings/input/json_data.json";
	rml:referenceFormulation ql:JSONPath;
	rml:iterator "$.random_variable_atoms[*]"
  ];

  rr:subjectMap [
  rr:template "https://nobias-project.eu/RandomVariableAtom/{name}";
  rr:class nobias:RandomVariableAtom
  ];
  
  rr:predicateObjectMap [
	  rr:predicate rdfs:subClassOf;
	  rr:objectMap [
		  rr:constant "GroundAtom"
	]
  ];
  
  rr:predicateObjectMap [
	  rr:predicate nobias:hasArgument;
	  rr:objectMap [
		  rml:reference "has_args"
	  ]
  ];

  rr:predicateObjectMap [
	  rr:predicate nobias:value;
	  rr:objectMap [
		  rml:reference "value"
	  ]
  ].

<InstantiatedArguments>
  a rr:TriplesMap;

  rml:logicalSource [
	rml:source "/git/SDM-RDFizer/mappings/input/json_data.json";
	rml:referenceFormulation ql:JSONPath;
	rml:iterator "$.instantiated_args[*]"
  ];

  rr:subjectMap [
  rr:template "https://nobias-project.eu/InstantiatedArgument/{name}";
  rr:class nobias:InstantiatedArgument
  ];
  
  rr:predicateObjectMap [
	 rr:predicate rdfs:subClassOf;
	 rr:objectMap [
		  rr:constant "Argument"
	]
  ];

  rr:predicateObjectMap [
	  rr:predicate nobias:instantiatesFrom;
	  rr:objectMap [
		rr:parentTriplesMap <Arguments> ;
		rr:joinCondition [
		  rr:child "instantiated_from";
		  rr:parent "name"
	  ]
	]
  ].

<Arguments>
  a rr:TriplesMap;

  rml:logicalSource [
	rml:source "/git/SDM-RDFizer/mappings/input/json_data.json";
	rml:referenceFormulation ql:JSONPath;
	rml:iterator "$.arguments[*]"
  ];

  rr:subjectMap [
  rr:template "https://nobias-project.eu/Argument/{name}";
  rr:class nobias:Argument
  ].